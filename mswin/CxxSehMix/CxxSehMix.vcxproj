<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <!-- Win32(x86) -->
    <ProjectConfiguration Include="Debug.EHsc.H3|Win32">
      <Configuration>Debug.EHsc.H3</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHa.H3|Win32">
      <Configuration>Debug.EHa.H3</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHs-.H3|Win32">
      <Configuration>Debug.EHs-.H3</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHsc.H4|Win32">
      <Configuration>Debug.EHsc.H4</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHa.H4|Win32">
      <Configuration>Debug.EHa.H4</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHs-.H4|Win32">
      <Configuration>Debug.EHs-.H4</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <!-- x64 -->
    <ProjectConfiguration Include="Debug.EHsc.H3|x64">
      <Configuration>Debug.EHsc.H3</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHa.H3|x64">
      <Configuration>Debug.EHa.H3</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHs-.H3|x64">
      <Configuration>Debug.EHs-.H3</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHsc.H4|x64">
      <Configuration>Debug.EHsc.H4</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHa.H4|x64">
      <Configuration>Debug.EHa.H4</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug.EHs-.H4|x64">
      <Configuration>Debug.EHs-.H4</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- User project properties -->
  
  <PropertyGroup Label="Globals">
    <ProjectGuid>{20230630-0000-0000-0000-233826000001}</ProjectGuid>
    <ProjectName>CxxSehMix</ProjectName>
     <TargetName>CxxSehMix-$(Configuration)</TargetName>
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  
  <!-- Microsoft.Cpp.Default.props 
  	For Linux .vcxproj, this should be after above "global" Properties. -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <!-- Debug or Release -->
  <PropertyGroup Condition="$(Configuration.Contains('Debug'))" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="$(Configuration.Contains('Release'))" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Enable this for new Visual Studio versions. v142=VC2019, v143=VC2022 etc
    <PlatformToolset>v142</PlatformToolset>
    -->
  </PropertyGroup>
  
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />

  <!-- Better .obj/.exe/.pdb output folder structure -->
  <PropertyGroup>
    <LinkIncremental>false</LinkIncremental>

    <objdirsuffix></objdirsuffix>
    <!-- VC2019: If .sln contains 2+ .vcxproj, different .vcxproj should have different objdirnam to avoid compiler warning MSB8028. -->
    <objdirsuffix Condition="$(SolutionName)!=$(ProjectName)">.$(ProjectName)</objdirsuffix>
    <IntDir>$(ProjectDir)obj-$(PlatformToolset)$(objdirsuffix)\$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(SolutionDir)bin-$(PlatformToolset)\$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>

  <!-- 
  	Compiler/Linker Behavior Settings : shared 
  -->
  <ItemDefinitionGroup>
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>

      <!-- /EHsc or /EHa or /EHs- -->
      <ExceptionHandling Condition="$(Configuration.Contains('EHsc'))">Sync</ExceptionHandling>
      <ExceptionHandling Condition="$(Configuration.Contains('EHa'))">Async</ExceptionHandling>
      <ExceptionHandling Condition="$(Configuration.Contains('EHs-'))">false</ExceptionHandling>
      
      <!-- CL option /GS- or /GS , 
        /GS- : uses __except_handler3 
        /GS  : uses __except_handler4 -->
      <BufferSecurityCheck Condition="$(Configuration.Contains('H3'))">false</BufferSecurityCheck>
      <BufferSecurityCheck Condition="$(Configuration.Contains('H4'))">true</BufferSecurityCheck>

      <!-- Note: $(TargetPath) cannot receive a value in <PropertyGroup>, so it has to be in ItemDefinitionGroup. -->

      <!-- LIB's .pdb is final-pdb at compile stage, we want to see whole original xxx.lib name in PDB filename. -->
      <ProgramDataBaseFileName Condition="'$(TargetExt)'=='.lib' ">$(TargetPath).pdb</ProgramDataBaseFileName>
      <!-- EXE/DLL's .pdb is truly intermediate, so we put it in $(IntDir), with some fancy file-naming -->
      <ProgramDataBaseFileName Condition="'$(TargetExt)'!='.lib' ">$(IntDir)$(TargetName).$(PlatformToolset).pdb</ProgramDataBaseFileName>

      <PreprocessorDefinitions>;;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <AdditionalIncludeDirectories>.;;$(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDataBaseFile>$(TargetPath).pdb</ProgramDataBaseFile>
      <ImportLibrary>$(OutDir)$(TargetName)--imp.lib</ImportLibrary>
      <GenerateMapFile>true</GenerateMapFile>
      <AdditionalLibraryDirectories>;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories Condition="'$(Platform)'=='Win32'">;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories Condition="'$(Platform)'=='x64'"  >;;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>SetupAPI.lib;;%(AdditionalDependencies)</AdditionalDependencies>

      <!-- Make EXE loaded at 0x400000, for easier debugging. -->
      <RandomizedBaseAddress>false</RandomizedBaseAddress>

    </Link>
    <!-- Better build.log file naming -->
    <BuildLog>
      <Path>$(IntDir)__$(MSBuildProjectName).build.log</Path>
    </BuildLog>
  </ItemDefinitionGroup>
  <!-- 
  	Compiler Behavior Settings : Debug 
  -->
  <ItemDefinitionGroup Condition="$(Configuration.Contains('Debug'))">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;DBG=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
    </Link>
  </ItemDefinitionGroup>
  <!-- 
  	Compiler Behavior Settings : Release 
  -->
  <ItemDefinitionGroup Condition="$(Configuration.Contains('Release'))">
    <ClCompile>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <PreprocessorDefinitions>NDEBUG;DBG=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>

  <!-- 
    Source file list:
   -->
  <ItemGroup>
    <ClCompile Include="CxxSehMix.cpp" />
  </ItemGroup>

  <!-- MSBuild system stock Cpp.targets -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>

  <!-- import VSPG start -->
                                        <!-- 
  <PropertyGroup>
    <VSPG_BootsDir_NoTBS>$(SolutionDir)_VSPG\boots</VSPG_BootsDir_NoTBS>
  </PropertyGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(VSPG_BootsDir_NoTBS)\_VSPG.props" Condition="exists('$(VSPG_BootsDir_NoTBS)\_VSPG.props')"/>
  </ImportGroup>
                                        -->
  <!-- import VSPG end -->
</Project>